name: Deploy EC2 Instance

on:
  push:
    branches:
      - main  # Trigger on push to main branch 
    paths:
      - '.github/workflows/ec2Instance.yml'


jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout code
      uses: actions/checkout@v2

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v2
      with:
        aws-access-key-id: ${{ secrets.ACCESS_KEY }}
        aws-secret-access-key: ${{ secrets.SECRET_KEY }}
        aws-region: us-east-1

    - name: Provision AWS Infrastructure
      env:
        AWS_ACCESS_KEY_ID: ${{ secrets.ACCESS_KEY }}
        AWS_SECRET_ACCESS_KEY: ${{ secrets.SECRET_KEY }}
        AWS_DEFAULT_REGION: 'us-east-1' # Replace with your desired AWS region
      run: |
        VPC_ID=$(aws ec2 create-vpc --cidr-block 10.0.0.0/16 --query 'Vpc.VpcId' --output text)
        echo "::set-output name=VPC_ID::$VPC_ID"
        
        SUBNET_ID=$(aws ec2 create-subnet --vpc-id $VPC_ID --cidr-block 10.0.1.0/24 --query 'Subnet.SubnetId' --output text)
        echo "::set-output name=SUBNET_ID::$SUBNET_ID"
        
        SG_ID=$(aws ec2 create-security-group --group-name my-security-group --description "My security group" --vpc-id $VPC_ID --query 'GroupId' --output text)
        echo "::set-output name=SG_ID::$SG_ID"
        
        aws ec2 authorize-security-group-ingress --group-id $SG_ID --protocol tcp --port 22 --cidr 0.0.0.0/0


    - name: Retrieve the Latest Ubuntu AMI ID
      id: get-ami
      run: |
        AMI_ID=$(aws ec2 describe-images \
          --filters "Name=name,Values=ubuntu/images/hvm-ssd/ubuntu-*-amd64*" "Name=state,Values=available" \
          --query 'Images | sort_by(@, &CreationDate) | [-1].ImageId' \
          --output text)
        echo "::set-output name=AMI_ID::$AMI_ID"

    - name: Launch EC2 Instance
      run: |
        aws ec2 run-instances --image-id ${{ steps.get-ami.outputs.AMI_ID }} --count 1 --instance-type t2.micro --key-name MyKeyPair --security-group-ids ${{ steps.get-ami.outputs.SG_ID }} --subnet-id ${{ steps.get-ami.outputs.SUBNET_ID }}
